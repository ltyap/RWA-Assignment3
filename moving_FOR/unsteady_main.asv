clc; clear all; close all;

Uinf = 1;
Winf = 0;
Qinf = sqrt(Uinf^2+Winf^2);
rho = 1.255;
chord = 1;
Npan = 10;  % number of panels
k = 0.1;%[0.02,0.05,0.1] reduced frequency
omega = k*2*Uinf/chord;
theta0 = 0.175;
dt = 0.2;
Nts = 300;  % number of time steps
it = 0; % time step counter t = it*dt
animation = 0;  % if animate velocity field

% discretization
panels = plate_discretization(chord, Npan);

% self-induced velocity
u = zeros(Npan, Npan);
w = zeros(Npan, Npan);
coeff = zeros(Npan, Npan);
for i=1:Npan
    for j=1:Npan
        % assuming singular gamma distribution
        u_ind = v_2D_from_vortex(1, [panels.xj(j), panels.zj(j)], [panels.xi(i), panels.zi(i)]); % not sure about this
        u(i,j) = u_ind(1);
        w(i,j) = u_ind(2);
        coeff(i,j) = dot([u(i,j),w(i,j)],panels.n(i,:));     % influence of element j acting on element i
    end
end

%% first time step - steady calculation to get wake vorticity
% for movement to the left at speed Uinf and pitch osciallation at frequency omega
t = 0;
kinematics.X0 = -Uinf*t;   % position of LE
kinematics.X0dot = -Uinf;  % X speed
kinematics.Z0 = 0;     % position of LE
kinematics.Z0dot = 0;  % Z speed
kinematics.theta = theta0*sin(omega*t);
kinematics.thetadot = theta0*omega*cos(omega*t);

vertices.gamma = [];
vertices.x = [];
vertices.z = [];

p_atm = 0; %101300;
Ngrid = 100;
gamma_old = zeros(Npan,1);  % at t=0 no circulation
TE_new = [cos(kinematics.theta), sin(kinematics.theta); -sin(kinematics.theta), cos(kinematics.theta)]*[panels.x(end);panels.z(end)]+[kinematics.X0;kinematics.Z0] ;    %location of TE at t=dt

for it=1:Nts
    
    % old TE position
    TE_old = TE_new;
    
    t = it*dt;
    kinematics.X0 = -Uinf*t;   % position of LE
    kinematics.theta = theta0*sin(omega*t);
    kinematics.thetadot = theta0*omega*cos(omega*t);
    
    TE_new = [cos(kinematics.theta), sin(kinematics.theta); -sin(kinematics.theta), cos(kinematics.theta)]*[panels.x(end);panels.z(end)]+[kinematics.X0;kinematics.Z0];    %location of TE at t=dt
    temp = [cos(kinematics.theta), sin(kinematics.theta); -sin(kinematics.theta), cos(kinematics.theta)]*[panels.x;panels.z]+[kinematics.X0;kinematics.Z0];    %location of TE at t=dt
    
    
    [Cl(it),~,vertices, gamma, Cl_c(it), Cl_nc(it)] = LumpedVortex(0, Npan, kinematics, coeff, panels, chord, Qinf, rho, vertices, TE_old, TE_new, gamma_old, dt);
    gamma_old = gamma(1:end-1);
    plate_vert.gamma = [gamma(1:end-1);vertices.gamma'];   % vertices on the panels
    plate_vert.coord = [[cos(kinematics.theta), sin(kinematics.theta); -sin(kinematics.theta), cos(kinematics.theta)]*[panels.xj;panels.zj]+...
        [kinematics.X0;kinematics.Z0], [vertices.x;vertices.z]] ;
    
    % plotting - velocity field
    if t==7.4 %round(kinematics.theta)==theta0 | round(kinematics.theta)==-theta0 | round(kinematics.theta)==0  %animation
        [x_grid, z_grid] = meshgrid(linspace(temp(1,1)-chord,temp(1,end)+2*chord,Ngrid),linspace(-1.5*chord,1.5*chord,Ngrid)) ;
        [u_grid, v_grid] = velocity_field(Uinf, Winf, x_grid, z_grid, plate_vert); % calculate velocity in field
        
        figure()
        clf
        hold on
        h = pcolor(x_grid,z_grid,sqrt(u_grid.^2+v_grid.^2));
        set(h, 'EdgeColor', 'none');
        colormap pink(32)
        g=colorbar;
        dq=16;
        quiver(x_grid(1:dq:end),z_grid(1:dq:end),u_grid(1:dq:end),v_grid(1:dq:end), 1.5, 'k')
        plot(temp(1,:), temp(2,:),'k','LineWidth', 4)
        hold off
        caxis([0.6 2])
        xlabel("x")
        ylabel("z")
        title("Velocity field")
        % scatter(vertices.x, vertices.z,10,'filled')
        axis equal
        ylim([-1 1])
        xlim([min(temp(1,:))-chord max(temp(1,:))+2*chord])
        drawnow;
        pause(0.01)
    end
    
    % convect vertices - just with freestream, does not calculate induced velocity
    vertices.x = vertices.x+Uinf*dt;
    vertices.z = vertices.z+Winf*dt;
end

figure()
hold on
% plot(rad2deg(theta0*sin([1:Nts]*omega*dt)),Cl)
plot(rad2deg(theta0*sin([1:Nts]*omega*dt)),Cl_c)
plot(rad2deg(theta0*sin([1:Nts]*omega*dt)),Cl_nc, '-.')
% quiver(rad2deg(theta0*sin(1*omega*dt)), Cl_c(1),rad2deg(theta0*sin(2*omega*dt)- theta0*sin(1*omega*dt)) ,Cl_c(2)-Cl_c(1))
hold off
grid on
grid minor
legend(["circulatory", "non-circulatory"])
xlabel("\theta [^\circ]")
ylabel("C_L")

figure()
hold on
plot([1:Nts]*dt,rad2deg(theta0*sin([1:Nts]*omega*dt)))
% plot([1:Nts]*dt,rad2deg(theta0*sin(2*pi*[1:Nts]*omega*dt)))
hold off
grid on
grid minor
xlabel("t")
ylabel("\theta")

figure()
hold on
plot([1:Nts]*dt, Cl_c)
plot([1:Nts]*dt, Cl_nc, '-.')
hold off
legend(["circulatory", "non-circulatory"])
grid on
grid minor
xlabel("t")
ylabel("C_L")

